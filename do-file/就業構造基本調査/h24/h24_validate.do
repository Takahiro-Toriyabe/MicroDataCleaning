/*-----------------------------------------------------------------------------
    <README>
    This do-file is generated from the python program provided
    in 'https://github.com/Takahiro-Toriyabe/MicroDataCleaning'.
        _const.do:    Import fixed-length data
        _var.do:      Put variable labels
        _val.do:      Put value labels
        _validate.do: Check if the data seems correctly imported
        rename.do:    Rename variable to harmonize several data

    WARNING:
        1. The generated do-files do not necessarily correct. If you find
           something wrong regarding the program or the resulting do-file(s),
           please report at the above GitHub web page.

        2. _validate.do checks if each variable has the values that it is
           supposed to have (only for categorical variables).

        3. rename.do is generated by finding a variable with a similar variable
           description and, if any, a similar variable name from the base data.
           So it is quite likely that some variables are renamed incorrectly.
           Please check and modify rename.do.

        4. Although value labels are put for each individual data, the labels
           are not put for the appended data, because the categories for each
           variable are very likely to be inconsistent across years.

        5. There is no file to make variable values consistent across different
           data.


    Source: 
    Date: 2019/08/15 18:51:22
-----------------------------------------------------------------------------*/


capture count if RES_NENTUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:RES_NENTUKI} (調査実施年月)"
}
capture assert inlist(RES_NENTUKI, 201210, .)
if _rc!=0 {
    display as error "WARNING: {bf:RES_NENTUKI} (調査実施年月) may have invalid values (Check layout sheet)"
}


capture count if NK_CHOKEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:NK_CHOKEN} (都道府県番号)"
}


capture count if NK_KENNAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:NK_KENNAI} (都道府県内一連番号)"
}


capture count if NK_SETAI1==.
if r(N)==_N {
    display as error "Only missing value: {bf:NK_SETAI1} (居住者の有無(世帯番号))"
}


capture count if NK_SETAI2==.
if r(N)==_N {
    display as error "Only missing value: {bf:NK_SETAI2} (抽出単位番号(世帯番号))"
}


capture count if NK_SETAI3==.
if r(N)==_N {
    display as error "Only missing value: {bf:NK_SETAI3} (世帯一連番号(世帯番号))"
}


capture count if NK_SETAIIN==.
if r(N)==_N {
    display as error "Only missing value: {bf:NK_SETAIIN} (世帯員番号)"
}


capture count if C_KEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:C_KEN} (都道府県(調査実施時))"
}


capture count if C_CITY==.
if r(N)==_N {
    display as error "Only missing value: {bf:C_CITY} (市区町村(調査実施時))"
}


capture count if var1==.
if r(N)==_N {
    display as error "Only missing value: {bf:var1} (オリジナルデータか否か)"
}
capture assert inlist(var1, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:var1} (オリジナルデータか否か) may have invalid values (Check layout sheet)"
}


capture count if R_RITSUTYPE==.
if r(N)==_N {
    display as error "Only missing value: {bf:R_RITSUTYPE} (乗率の種類)"
}
capture assert inlist(R_RITSUTYPE, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:R_RITSUTYPE} (乗率の種類) may have invalid values (Check layout sheet)"
}


capture count if R_KEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:R_KEN} (都道府県番号)"
}


capture count if R_RITSUCITYNUM==.
if r(N)==_N {
    display as error "Only missing value: {bf:R_RITSUCITYNUM} (表章市用乗率の種類)"
}
capture assert inlist(R_RITSUCITYNUM, 100, 130, 140, 150, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 222, 227, .)
if _rc!=0 {
    display as error "WARNING: {bf:R_RITSUCITYNUM} (表章市用乗率の種類) may have invalid values (Check layout sheet)"
}


capture count if R_RITSUBLKNUM==.
if r(N)==_N {
    display as error "Only missing value: {bf:R_RITSUBLKNUM} (県内経済圏用乗率の種類)"
}


capture count if R_SHUKEI==.
if r(N)==_N {
    display as error "Only missing value: {bf:R_SHUKEI} (集計用乗率)"
}


capture count if KC_JININ==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_JININ} (世帯人員(15歳以上))"
}


capture count if KC_NENSYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENSYU} (G1_世帯全体の年間収入)"
}
capture assert inlist(KC_NENSYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_NENSYU} (G1_世帯全体の年間収入) may have invalid values (Check layout sheet)"
}


capture count if KC_MIMAN15==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_MIMAN15} (G2_15歳未満の合計)"
}


capture count if KC_NENREI0==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI0} (G2_0歳)"
}


capture count if KC_NENREI1==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI1} (G2_1歳)"
}


capture count if KC_NENREI2==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI2} (G2_2歳)"
}


capture count if KC_NENREI3==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI3} (G2_3歳)"
}


capture count if KC_NENREI4==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI4} (G2_4歳)"
}


capture count if KC_NENREI5==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI5} (G2_5歳)"
}


capture count if KC_NENREI6==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI6} (G2_6歳)"
}


capture count if KC_NENREI7==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI7} (G2_7歳)"
}


capture count if KC_NENREI8==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI8} (G2_8歳)"
}


capture count if KC_NENREI9==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI9} (G2_9歳)"
}


capture count if KC_NENREI10==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI10} (G2_10歳)"
}


capture count if KC_NENREI11==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI11} (G2_11歳)"
}


capture count if KC_NENREI12==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI12} (G2_12歳)"
}


capture count if KC_NENREI13==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI13} (G2_13歳)"
}


capture count if KC_NENREI14==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NENREI14} (G2_14歳)"
}


capture count if KC_SEX==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SEX} (1_男女の別)"
}
capture assert inlist(KC_SEX, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SEX} (1_男女の別) may have invalid values (Check layout sheet)"
}


capture count if KC_HAIGU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_HAIGU} (1_配偶者の有無)"
}
capture assert inlist(KC_HAIGU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_HAIGU} (1_配偶者の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_TUZUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_TUZUKI} (2_続き柄)"
}
capture assert inlist(KC_TUZUKI, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_TUZUKI} (2_続き柄) may have invalid values (Check layout sheet)"
}


capture count if KC_GENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_GENGO} (3_出生の年月(元号))"
}
capture assert inlist(KC_GENGO, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_GENGO} (3_出生の年月(元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_NEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_NEN} (3_出生の年月(年))"
}


capture count if KC_TUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_TUKI} (3_出生の年月(月))"
}


capture count if KC_KYOIKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KYOIKU} (4(1)_就学区分)"
}
capture assert inlist(KC_KYOIKU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KYOIKU} (4(1)_就学区分) may have invalid values (Check layout sheet)"
}


capture count if KC_SOTUJIKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SOTUJIKI} (4(1)_卒業年次区分)"
}
capture assert inlist(KC_SOTUJIKI, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SOTUJIKI} (4(1)_卒業年次区分) may have invalid values (Check layout sheet)"
}


capture count if KC_SOTUGENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SOTUGENGO} (4(1)_卒業年次(元号))"
}
capture assert inlist(KC_SOTUGENGO, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SOTUGENGO} (4(1)_卒業年次(元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_SOTUNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SOTUNEN} (4(1)_卒業年次(年))"
}


capture count if KC_GAKKO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_GAKKO} (4(2)_学校区分)"
}
capture assert inlist(KC_GAKKO, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_GAKKO} (4(2)_学校区分) may have invalid values (Check layout sheet)"
}


capture count if KC_JUKYOGENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_JUKYOGENGO} (5(1)_居住開始時期区分)"
}
capture assert inlist(KC_JUKYOGENGO, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_JUKYOGENGO} (5(1)_居住開始時期区分) may have invalid values (Check layout sheet)"
}


capture count if KC_JUKYONEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_JUKYONEN} (5(1)_居住開始時期(年))"
}


capture count if KC_JUKYOTUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_JUKYOTUKI} (5(1)_居住開始時期(月))"
}


capture count if KC_JUKYORIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_JUKYORIYU} (5(2)_居住理由)"
}
capture assert inlist(KC_JUKYORIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_JUKYORIYU} (5(2)_居住理由) may have invalid values (Check layout sheet)"
}


capture count if KC_ZENJKBN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_ZENJKBN} (5(3)_前住地区分)"
}
capture assert inlist(KC_ZENJKBN, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_ZENJKBN} (5(3)_前住地区分) may have invalid values (Check layout sheet)"
}


capture count if KC_ZENJKEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_ZENJKEN} (5(3)_前住地都道府県番号(調査員記入欄))"
}


capture count if KC_SYUNYUMAIN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYUMAIN} (6_収入の種類(主))"
}
capture assert inlist(KC_SYUNYUMAIN, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYUMAIN} (6_収入の種類(主)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUNYU1==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYU1} (6_賃金・給料(従))"
}
capture assert inlist(KC_SYUNYU1, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYU1} (6_賃金・給料(従)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUNYU2==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYU2} (6_事業収入(従))"
}
capture assert inlist(KC_SYUNYU2, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYU2} (6_事業収入(従)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUNYU3==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYU3} (6_内職収入(従))"
}
capture assert inlist(KC_SYUNYU3, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYU3} (6_内職収入(従)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUNYU4==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYU4} (6_年金・恩給(従))"
}
capture assert inlist(KC_SYUNYU4, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYU4} (6_年金・恩給(従)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUNYU5==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYU5} (6_雇用保険(従))"
}
capture assert inlist(KC_SYUNYU5, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYU5} (6_雇用保険(従)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUNYU6==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYU6} (6_その他の給付(従))"
}
capture assert inlist(KC_SYUNYU6, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYU6} (6_その他の給付(従)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUNYU7==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYU7} (6_仕送り(従))"
}
capture assert inlist(KC_SYUNYU7, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYU7} (6_仕送り(従)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUNYU8==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYU8} (6_家賃・地代(従))"
}
capture assert inlist(KC_SYUNYU8, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYU8} (6_家賃・地代(従)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUNYU9==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYU9} (6_利子・配当(従))"
}
capture assert inlist(KC_SYUNYU9, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYU9} (6_利子・配当(従)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUNYU10==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUNYU10} (6_その他(従))"
}
capture assert inlist(KC_SYUNYU10, 10, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUNYU10} (6_その他(従)) may have invalid values (Check layout sheet)"
}


capture count if KC_SYUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYUGYO} (7_就業状態)"
}
capture assert inlist(KC_SYUGYO, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYUGYO} (7_就業状態) may have invalid values (Check layout sheet)"
}


capture count if KC_CHII==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_CHII} (A1_従業上の地位)"
}
capture assert inlist(KC_CHII, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_CHII} (A1_従業上の地位) may have invalid values (Check layout sheet)"
}


capture count if KC_KIGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KIGYO} (A1-2_起業の有無)"
}
capture assert inlist(KC_KIGYO, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KIGYO} (A1-2_起業の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_KOYOKIKAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KOYOKIKAN} (A1-3_雇用契約期間の有無・雇用契約期間)"
}
capture assert inlist(KC_KOYOKIKAN, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KOYOKIKAN} (A1-3_雇用契約期間の有無・雇用契約期間) may have invalid values (Check layout sheet)"
}


capture count if KC_KOUSHIN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KOUSHIN} (A1-4_契約更新の有無)"
}
capture assert inlist(KC_KOUSHIN, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KOUSHIN} (A1-4_契約更新の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_KOUSHINSU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KOUSHINSU} (A1-4_契約更新回数)"
}


capture count if KC_SOSHIKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SOSHIKI} (A2(1)_経営組織)"
}
capture assert inlist(KC_SOSHIKI, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SOSHIKI} (A2(1)_経営組織) may have invalid values (Check layout sheet)"
}


capture count if KC_SANGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SANGYO} (A2(2)(3)_産業)"
}


capture count if KC_SYOKUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYOKUGYO} (A3_職業)"
}


capture count if KC_KIBO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KIBO} (A4_従業者規模)"
}
capture assert inlist(KC_KIBO, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KIBO} (A4_従業者規模) may have invalid values (Check layout sheet)"
}


capture count if KC_SGNISSU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SGNISSU} (A5(1)_年間日数)"
}
capture assert inlist(KC_SGNISSU, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SGNISSU} (A5(1)_年間日数) may have invalid values (Check layout sheet)"
}


capture count if KC_SGKISOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SGKISOKU} (A5(2)_規則性)"
}
capture assert inlist(KC_SGKISOKU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SGKISOKU} (A5(2)_規則性) may have invalid values (Check layout sheet)"
}


capture count if KC_SGJIKAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SGJIKAN} (A5(3)_週時間)"
}
capture assert inlist(KC_SGJIKAN, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SGJIKAN} (A5(3)_週時間) may have invalid values (Check layout sheet)"
}


capture count if KC_SYOTOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SYOTOKU} (A6_年間所得)"
}
capture assert inlist(KC_SYOTOKU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SYOTOKU} (A6_年間所得) may have invalid values (Check layout sheet)"
}


capture count if KC_SGGENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SGGENGO} (A7_就業開始時期(元号))"
}
capture assert inlist(KC_SGGENGO, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SGGENGO} (A7_就業開始時期(元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_SGNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SGNEN} (A7_就業開始時期(年))"
}


capture count if KC_SGTUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SGTUKI} (A7_就業開始時期(月))"
}


capture count if KC_KEIZOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KEIZOKU} (A8_継続希望)"
}
capture assert inlist(KC_KEIZOKU, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KEIZOKU} (A8_継続希望) may have invalid values (Check layout sheet)"
}


capture count if KC_KBRIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KBRIYU} (A8-2_転職希望理由)"
}
capture assert inlist(KC_KBRIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KBRIYU} (A8-2_転職希望理由) may have invalid values (Check layout sheet)"
}


capture count if KC_KBKEITAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KBKEITAI} (A8-3_希望する仕事の形態)"
}
capture assert inlist(KC_KBKEITAI, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KBKEITAI} (A8-3_希望する仕事の形態) may have invalid values (Check layout sheet)"
}


capture count if KC_KYUSYOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KYUSYOKU} (A8-4_求職活動)"
}
capture assert inlist(KC_KYUSYOKU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KYUSYOKU} (A8-4_求職活動) may have invalid values (Check layout sheet)"
}


capture count if KC_KBJIKAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KBJIKAN} (A9_時間希望)"
}
capture assert inlist(KC_KBJIKAN, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KBJIKAN} (A9_時間希望) may have invalid values (Check layout sheet)"
}


capture count if KC_FKKBN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_FKKBN} (A10_副業(有無・従業上の地位))"
}
capture assert inlist(KC_FKKBN, 1, 2, 3, 4, 5, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_FKKBN} (A10_副業(有無・従業上の地位)) may have invalid values (Check layout sheet)"
}


capture count if KC_FKSANGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_FKSANGYO} (A11_副業の産業)"
}


capture count if KC_ZENSYUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_ZENSYUGYO} (A12_1年前の就業状態)"
}
capture assert inlist(KC_ZENSYUGYO, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_ZENSYUGYO} (A12_1年前の就業状態) may have invalid values (Check layout sheet)"
}


capture count if KC_ZENUMU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_ZENUMU} (A13_前職の有無)"
}
capture assert inlist(KC_ZENUMU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_ZENUMU} (A13_前職の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_BKBUMU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BKBUMU} (B1_就業希望の有無)"
}
capture assert inlist(KC_BKBUMU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BKBUMU} (B1_就業希望の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_BKBRIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BKBRIYU} (B2_就業希望の理由)"
}
capture assert inlist(KC_BKBRIYU, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BKBRIYU} (B2_就業希望の理由) may have invalid values (Check layout sheet)"
}


capture count if KC_BKBSYURUI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BKBSYURUI} (B3_希望する仕事の種類)"
}
capture assert inlist(KC_BKBSYURUI, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BKBSYURUI} (B3_希望する仕事の種類) may have invalid values (Check layout sheet)"
}


capture count if KC_BKBKEITAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BKBKEITAI} (B4_希望する仕事の形態)"
}
capture assert inlist(KC_BKBKEITAI, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BKBKEITAI} (B4_希望する仕事の形態) may have invalid values (Check layout sheet)"
}


capture count if KC_BKYUSYOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BKYUSYOKU} (B5_求職活動)"
}
capture assert inlist(KC_BKYUSYOKU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BKYUSYOKU} (B5_求職活動) may have invalid values (Check layout sheet)"
}


capture count if KC_BRIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BRIYU} (B6_非求職の理由)"
}
capture assert inlist(KC_BRIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BRIYU} (B6_非求職の理由) may have invalid values (Check layout sheet)"
}


capture count if KC_BKBN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BKBN} (B7_求職期間(区分))"
}
capture assert inlist(KC_BKBN, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BKBN} (B7_求職期間(区分)) may have invalid values (Check layout sheet)"
}


capture count if KC_BNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BNEN} (B7_求職期間(年))"
}


capture count if KC_BTUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BTUKI} (B7_求職期間(月))"
}


capture count if KC_BKBJIKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BKBJIKI} (B8_就業希望時期)"
}
capture assert inlist(KC_BKBJIKI, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BKBJIKI} (B8_就業希望時期) may have invalid values (Check layout sheet)"
}


capture count if KC_BHKBRIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BHKBRIYU} (B9_就業非希望理由)"
}
capture assert inlist(KC_BHKBRIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BHKBRIYU} (B9_就業非希望理由) may have invalid values (Check layout sheet)"
}


capture count if KC_BZENSYUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BZENSYUGYO} (B10_1年前の就業状態)"
}
capture assert inlist(KC_BZENSYUGYO, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BZENSYUGYO} (B10_1年前の就業状態) may have invalid values (Check layout sheet)"
}


capture count if KC_BZENUMU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_BZENUMU} (B11_前職の有無)"
}
capture assert inlist(KC_BZENUMU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_BZENUMU} (B11_前職の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_RSJIKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSJIKI} (C1_離職時期(区分))"
}
capture assert inlist(KC_RSJIKI, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_RSJIKI} (C1_離職時期(区分)) may have invalid values (Check layout sheet)"
}


capture count if KC_RSGENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSGENGO} (C1_離職時期(元号))"
}
capture assert inlist(KC_RSGENGO, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_RSGENGO} (C1_離職時期(元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_RSNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSNEN} (C1_離職時期((年))"
}


capture count if KC_RSTUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSTUKI} (C1_離職時期(月))"
}


capture count if KC_RSKIKAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSKIKAN} (C2_就業期間(区分))"
}
capture assert inlist(KC_RSKIKAN, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_RSKIKAN} (C2_就業期間(区分)) may have invalid values (Check layout sheet)"
}


capture count if KC_RSKNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSKNEN} (C2_就業期間(年))"
}


capture count if KC_RSKTUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSKTUKI} (C2_就業期間(月))"
}


capture count if KC_RSRIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSRIYU} (C3_離職理由)"
}
capture assert inlist(KC_RSRIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_RSRIYU} (C3_離職理由) may have invalid values (Check layout sheet)"
}


capture count if KC_RSCHII==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSCHII} (C4_従業上の地位)"
}
capture assert inlist(KC_RSCHII, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_RSCHII} (C4_従業上の地位) may have invalid values (Check layout sheet)"
}


capture count if KC_RSSANGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSSANGYO} (C5_産業(前職))"
}


capture count if KC_RSSYOKUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_RSSYOKUGYO} (C6_職業(前職))"
}


capture count if KC_SSKBN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SSKBN} (C7_初職と現職・前職との関係)"
}
capture assert inlist(KC_SSKBN, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SSKBN} (C7_初職と現職・前職との関係) may have invalid values (Check layout sheet)"
}


capture count if KC_SSGENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SSGENGO} (C8_初職時期(元号))"
}
capture assert inlist(KC_SSGENGO, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SSGENGO} (C8_初職時期(元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_SSNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SSNEN} (C8_初職時期(年))"
}


capture count if KC_SSTUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SSTUKI} (C8_初職時期(月))"
}


capture count if KC_SSCHIKEI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SSCHIKEI} (C9_初職の地位と形態)"
}
capture assert inlist(KC_SSCHIKEI, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SSCHIKEI} (C9_初職の地位と形態) may have invalid values (Check layout sheet)"
}


capture count if KC_KUMU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KUMU} (D_訓練・自己啓発の有無)"
}
capture assert inlist(KC_KUMU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KUMU} (D_訓練・自己啓発の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_KCOMPANY1==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KCOMPANY1} (D-2_勤め先での研修(勤め先))"
}
capture assert inlist(KC_KCOMPANY1, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KCOMPANY1} (D-2_勤め先での研修(勤め先)) may have invalid values (Check layout sheet)"
}


capture count if KC_KCOMPANY2==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KCOMPANY2} (D-2_大学・大学院の講座の受講(勤め先))"
}
capture assert inlist(KC_KCOMPANY2, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KCOMPANY2} (D-2_大学・大学院の講座の受講(勤め先)) may have invalid values (Check layout sheet)"
}


capture count if KC_KCOMPANY3==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KCOMPANY3} (D-2_専修学校・各種学校の講座の受講(勤め先))"
}
capture assert inlist(KC_KCOMPANY3, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KCOMPANY3} (D-2_専修学校・各種学校の講座の受講(勤め先)) may have invalid values (Check layout sheet)"
}


capture count if KC_KCOMPANY4==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KCOMPANY4} (D-2_公共職業能力開発施設の講座の受講(勤め先))"
}
capture assert inlist(KC_KCOMPANY4, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KCOMPANY4} (D-2_公共職業能力開発施設の講座の受講(勤め先)) may have invalid values (Check layout sheet)"
}


capture count if KC_KCOMPANY5==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KCOMPANY5} (D-2_講演会・セミナーの傍聴(勤め先))"
}
capture assert inlist(KC_KCOMPANY5, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KCOMPANY5} (D-2_講演会・セミナーの傍聴(勤め先)) may have invalid values (Check layout sheet)"
}


capture count if KC_KCOMPANY6==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KCOMPANY6} (D-2_勉強会・研修会への参加(勤め先))"
}
capture assert inlist(KC_KCOMPANY6, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KCOMPANY6} (D-2_勉強会・研修会への参加(勤め先)) may have invalid values (Check layout sheet)"
}


capture count if KC_KCOMPANY7==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KCOMPANY7} (D-2_通信教育の受講(勤め先))"
}
capture assert inlist(KC_KCOMPANY7, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KCOMPANY7} (D-2_通信教育の受講(勤め先)) may have invalid values (Check layout sheet)"
}


capture count if KC_KCOMPANY9==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KCOMPANY9} (D-2_その他(勤め先))"
}
capture assert inlist(KC_KCOMPANY9, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KCOMPANY9} (D-2_その他(勤め先)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJIHATU2==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJIHATU2} (D-2_大学・大学院の講座の受講(自発))"
}
capture assert inlist(KC_KJIHATU2, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJIHATU2} (D-2_大学・大学院の講座の受講(自発)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJIHATU3==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJIHATU3} (D-2_専修学校・各種学校の講座の受講(自発))"
}
capture assert inlist(KC_KJIHATU3, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJIHATU3} (D-2_専修学校・各種学校の講座の受講(自発)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJIHATU4==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJIHATU4} (D-2_公共職業能力開発施設の講座の受講(自発))"
}
capture assert inlist(KC_KJIHATU4, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJIHATU4} (D-2_公共職業能力開発施設の講座の受講(自発)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJIHATU5==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJIHATU5} (D-2_講演会・セミナーの傍聴(自発))"
}
capture assert inlist(KC_KJIHATU5, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJIHATU5} (D-2_講演会・セミナーの傍聴(自発)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJIHATU6==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJIHATU6} (D-2_勉強会・研修会への参加(自発))"
}
capture assert inlist(KC_KJIHATU6, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJIHATU6} (D-2_勉強会・研修会への参加(自発)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJIHATU7==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJIHATU7} (D-2_通信教育の受講(自発))"
}
capture assert inlist(KC_KJIHATU7, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJIHATU7} (D-2_通信教育の受講(自発)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJIHATU8==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJIHATU8} (D-2_自学・自習(自発))"
}
capture assert inlist(KC_KJIHATU8, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJIHATU8} (D-2_自学・自習(自発)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJIHATU9==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJIHATU9} (D-2_その他(自発))"
}
capture assert inlist(KC_KJIHATU9, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJIHATU9} (D-2_その他(自発)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJYOSEI2==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJYOSEI2} (D-2_大学・大学院の講座の受講(うち公助))"
}
capture assert inlist(KC_KJYOSEI2, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJYOSEI2} (D-2_大学・大学院の講座の受講(うち公助)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJYOSEI3==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJYOSEI3} (D-2_専修学校・各種学校の講座の受講(うち公助))"
}
capture assert inlist(KC_KJYOSEI3, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJYOSEI3} (D-2_専修学校・各種学校の講座の受講(うち公助)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJYOSEI4==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJYOSEI4} (D-2_公共職業能力開発施設の講座の受講(うち公助))"
}
capture assert inlist(KC_KJYOSEI4, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJYOSEI4} (D-2_公共職業能力開発施設の講座の受講(うち公助)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJYOSEI5==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJYOSEI5} (D-2_講演会・セミナーの傍聴(うち公助))"
}
capture assert inlist(KC_KJYOSEI5, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJYOSEI5} (D-2_講演会・セミナーの傍聴(うち公助)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJYOSEI6==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJYOSEI6} (D-2_勉強会・研修会への参加(うち公助))"
}
capture assert inlist(KC_KJYOSEI6, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJYOSEI6} (D-2_勉強会・研修会への参加(うち公助)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJYOSEI7==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJYOSEI7} (D-2_通信教育の受講(うち公助))"
}
capture assert inlist(KC_KJYOSEI7, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJYOSEI7} (D-2_通信教育の受講(うち公助)) may have invalid values (Check layout sheet)"
}


capture count if KC_KJYOSEI9==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KJYOSEI9} (D-2_その他(うち公助))"
}
capture assert inlist(KC_KJYOSEI9, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KJYOSEI9} (D-2_その他(うち公助)) may have invalid values (Check layout sheet)"
}


capture count if KC_IKUJI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_IKUJI} (E1_育児の有無)"
}
capture assert inlist(KC_IKUJI, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_IKUJI} (E1_育児の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_IKUJISEIDO1==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_IKUJISEIDO1} (E1-2_育児休業)"
}
capture assert inlist(KC_IKUJISEIDO1, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_IKUJISEIDO1} (E1-2_育児休業) may have invalid values (Check layout sheet)"
}


capture count if KC_IKUJISEIDO2==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_IKUJISEIDO2} (E1-2_短時間勤務)"
}
capture assert inlist(KC_IKUJISEIDO2, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_IKUJISEIDO2} (E1-2_短時間勤務) may have invalid values (Check layout sheet)"
}


capture count if KC_IKUJISEIDO3==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_IKUJISEIDO3} (E1-2_子の看護休暇)"
}
capture assert inlist(KC_IKUJISEIDO3, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_IKUJISEIDO3} (E1-2_子の看護休暇) may have invalid values (Check layout sheet)"
}


capture count if KC_IKUJISEIDO4==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_IKUJISEIDO4} (E1-2_その他)"
}
capture assert inlist(KC_IKUJISEIDO4, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_IKUJISEIDO4} (E1-2_その他) may have invalid values (Check layout sheet)"
}


capture count if KC_IKUJISEIDO5==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_IKUJISEIDO5} (E1-2_しなかった)"
}
capture assert inlist(KC_IKUJISEIDO5, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_IKUJISEIDO5} (E1-2_しなかった) may have invalid values (Check layout sheet)"
}


capture count if KC_KAIGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KAIGO} (E2_介護の有無)"
}
capture assert inlist(KC_KAIGO, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KAIGO} (E2_介護の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_KAIGOSEIDO1==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KAIGOSEIDO1} (E2-2_介護休業)"
}
capture assert inlist(KC_KAIGOSEIDO1, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KAIGOSEIDO1} (E2-2_介護休業) may have invalid values (Check layout sheet)"
}


capture count if KC_KAIGOSEIDO2==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KAIGOSEIDO2} (E2-2_短時間勤務)"
}
capture assert inlist(KC_KAIGOSEIDO2, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KAIGOSEIDO2} (E2-2_短時間勤務) may have invalid values (Check layout sheet)"
}


capture count if KC_KAIGOSEIDO3==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KAIGOSEIDO3} (E2-2_介護休暇)"
}
capture assert inlist(KC_KAIGOSEIDO3, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KAIGOSEIDO3} (E2-2_介護休暇) may have invalid values (Check layout sheet)"
}


capture count if KC_KAIGOSEIDO4==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KAIGOSEIDO4} (E2-2_その他)"
}
capture assert inlist(KC_KAIGOSEIDO4, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KAIGOSEIDO4} (E2-2_その他) may have invalid values (Check layout sheet)"
}


capture count if KC_KAIGOSEIDO5==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_KAIGOSEIDO5} (E2-2_しなかった)"
}
capture assert inlist(KC_KAIGOSEIDO5, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_KAIGOSEIDO5} (E2-2_しなかった) may have invalid values (Check layout sheet)"
}


capture count if KC_EIKYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_EIKYO} (F1_仕事への影響)"
}
capture assert inlist(KC_EIKYO, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_EIKYO} (F1_仕事への影響) may have invalid values (Check layout sheet)"
}


capture count if KC_HINAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_HINAN} (F2_避難の有無)"
}
capture assert inlist(KC_HINAN, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_HINAN} (F2_避難の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_HINANNOW==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_HINANNOW} (F2-2_避難状況)"
}
capture assert inlist(KC_HINANNOW, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_HINANNOW} (F2-2_避難状況) may have invalid values (Check layout sheet)"
}


capture count if KC_SHINKBN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SHINKBN} (F2-3_震災時の居住地(区分))"
}
capture assert inlist(KC_SHINKBN, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_SHINKBN} (F2-3_震災時の居住地(区分)) may have invalid values (Check layout sheet)"
}


capture count if KC_SHINKENCITY==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_SHINKENCITY} (F2-3_震災時の居住地)"
}


capture count if S_IPPAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_IPPAN} (一般・単身世帯の別)"
}
capture assert inlist(S_IPPAN, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_IPPAN} (一般・単身世帯の別) may have invalid values (Check layout sheet)"
}


capture count if S_KAZOKURUI12==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_KAZOKURUI12} (特定家族類型12区分)"
}
capture assert inlist(S_KAZOKURUI12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_KAZOKURUI12} (特定家族類型12区分) may have invalid values (Check layout sheet)"
}


capture count if K_AGE==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_AGE} (各歳)"
}


capture count if K_AGE5==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_AGE5} (5歳階級)"
}
capture assert inlist(K_AGE5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_AGE5} (5歳階級) may have invalid values (Check layout sheet)"
}


capture count if K_AGE10==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_AGE10} (10歳階級)"
}
capture assert inlist(K_AGE10, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_AGE10} (10歳階級) may have invalid values (Check layout sheet)"
}


