/*----------------------------------------------------------------------
    <README>
    This do-file is generated from the python program provided by [URL].
        _const.do:    Import fixed-length data
        _var.do:      Put variable labels
        _val.do:      Put value labels
        _validate.do: Check if the data seems correctly imported
        _rename.do: Rename variable names to append several data

    WARNING:
        1. The generated do-files do not necessarily correct.
           If you find something wrong regarding the program or
           the resulting do-file(s), please send email to [Email Address].

        2. All variables are assumed to be numeric, if there is a variable
           with non-missing string value, modify _const.do and _val.do

        3. _validate.do checks if each variable has the values that it is
           supposed to have. (Categorical variables only)

        4. _rename.do is generated by finding a variable with a similar
           variable description and, if any, a similar variable name from
           the base data. So it is quite likely that some variables are
           renamed incorrectly. Please check and modify _rename.do.

        5. In addition, there is no file to make variable values consistent
           across different data.


    Source: （参考）符号表_雇用動向調査（入職者票）h15.xlsx
    Date: 2019/02/27 01:44:09
----------------------------------------------------------------------*/


count if var1==.
if r(N)==_N {
    display as error "Only missing value: {bf:var1} (調査IDT)"
}


count if var2==.
if r(N)==_N {
    display as error "Only missing value: {bf:var2} (西暦年)"
}
capture assert inlist(var2, 2003, .)
if _rc!=0 {
    display as error "WARNING: {bf:var2} (西暦年) may have invalid values (Check layout sheet)"
}


count if var3==.
if r(N)==_N {
    display as error "Only missing value: {bf:var3} (調査月)"
}
capture assert inlist(var3, 1, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:var3} (調査月) may have invalid values (Check layout sheet)"
}


count if var4==.
if r(N)==_N {
    display as error "Only missing value: {bf:var4} (調査区分)"
}


count if var5==.
if r(N)==_N {
    display as error "Only missing value: {bf:var5} (地域9-4)"
}
capture assert inlist(var5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, .)
if _rc!=0 {
    display as error "WARNING: {bf:var5} (地域9-4) may have invalid values (Check layout sheet)"
}


count if var6==.
if r(N)==_N {
    display as error "Only missing value: {bf:var6} (地域9-2)"
}
capture assert inlist(var6, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, .)
if _rc!=0 {
    display as error "WARNING: {bf:var6} (地域9-2) may have invalid values (Check layout sheet)"
}


count if var7==.
if r(N)==_N {
    display as error "Only missing value: {bf:var7} (都道府県番号)"
}


count if var8==.
if r(N)==_N {
    display as error "Only missing value: {bf:var8} (事業所番号)"
}


count if var9==.
if r(N)==_N {
    display as error "Only missing value: {bf:var9} (大分類)"
}


count if var10==.
if r(N)==_N {
    display as error "Only missing value: {bf:var10} (中分類)"
}


count if var11==.
if r(N)==_N {
    display as error "Only missing value: {bf:var11} (抽出符号)"
}


count if var12==.
if r(N)==_N {
    display as error "Only missing value: {bf:var12} (事業所)"
}
capture assert inlist(var12, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:var12} (事業所) may have invalid values (Check layout sheet)"
}


count if var13==.
if r(N)==_N {
    display as error "Only missing value: {bf:var13} (企業)"
}
capture assert inlist(var13, 1, 2, 3, 4, 5, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:var13} (企業) may have invalid values (Check layout sheet)"
}


count if var14==.
if r(N)==_N {
    display as error "Only missing value: {bf:var14} (産業連番)"
}


count if var15==.
if r(N)==_N {
    display as error "Only missing value: {bf:var15} (事業所規模)"
}
capture assert inlist(var15, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:var15} (事業所規模) may have invalid values (Check layout sheet)"
}


count if var16==.
if r(N)==_N {
    display as error "Only missing value: {bf:var16} (性別)"
}
capture assert inlist(var16, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:var16} (性別) may have invalid values (Check layout sheet)"
}


count if var17==.
if r(N)==_N {
    display as error "Only missing value: {bf:var17} (就業形態)"
}
capture assert inlist(var17, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:var17} (就業形態) may have invalid values (Check layout sheet)"
}


count if var18==.
if r(N)==_N {
    display as error "Only missing value: {bf:var18} (乗率)"
}


count if var19==.
if r(N)==_N {
    display as error "Only missing value: {bf:var19} (性別)"
}
capture assert inlist(var19, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:var19} (性別) may have invalid values (Check layout sheet)"
}


count if var20==.
if r(N)==_N {
    display as error "Only missing value: {bf:var20} (チェック済)"
}
capture assert inlist(var20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:var20} (チェック済) may have invalid values (Check layout sheet)"
}


count if var22==.
if r(N)==_N {
    display as error "Only missing value: {bf:var22} (チェック済)"
}
capture assert inlist(var22, 1, 2, 3, 4, 5, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:var22} (チェック済) may have invalid values (Check layout sheet)"
}


count if var25==.
if r(N)==_N {
    display as error "Only missing value: {bf:var25} (卒業時期)"
}
capture assert inlist(var25, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:var25} (卒業時期) may have invalid values (Check layout sheet)"
}


count if var26==.
if r(N)==_N {
    display as error "Only missing value: {bf:var26} (チェック済)"
}
capture assert inlist(var26, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:var26} (チェック済) may have invalid values (Check layout sheet)"
}


count if var28==.
if r(N)==_N {
    display as error "Only missing value: {bf:var28} (就業形態)"
}
capture assert inlist(var28, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:var28} (就業形態) may have invalid values (Check layout sheet)"
}


count if var29==.
if r(N)==_N {
    display as error "Only missing value: {bf:var29} (チェック済)"
}
capture assert inlist(var29, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:var29} (チェック済) may have invalid values (Check layout sheet)"
}


count if var31==.
if r(N)==_N {
    display as error "Only missing value: {bf:var31} (チェック済)"
}
capture assert inlist(var31, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:var31} (チェック済) may have invalid values (Check layout sheet)"
}


count if var36==.
if r(N)==_N {
    display as error "Only missing value: {bf:var36} (地域9-5)"
}


count if var37==.
if r(N)==_N {
    display as error "Only missing value: {bf:var37} (地域9-3)"
}


count if var38==.
if r(N)==_N {
    display as error "Only missing value: {bf:var38} (都道府県)"
}


count if var39==.
if r(N)==_N {
    display as error "Only missing value: {bf:var39} (在籍の有無)"
}
capture assert inlist(var39, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:var39} (在籍の有無) may have invalid values (Check layout sheet)"
}


count if var40==.
if r(N)==_N {
    display as error "Only missing value: {bf:var40} (就業の動機)"
}


count if var41==.
if r(N)==_N {
    display as error "Only missing value: {bf:var41} (前職の産業)"
}
capture assert inlist(var41, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:var41} (前職の産業) may have invalid values (Check layout sheet)"
}


count if var42==.
if r(N)==_N {
    display as error "Only missing value: {bf:var42} (チェック済)"
}
capture assert inlist(var42, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:var42} (チェック済) may have invalid values (Check layout sheet)"
}


count if var44==.
if r(N)==_N {
    display as error "Only missing value: {bf:var44} (チェック済)"
}
capture assert inlist(var44, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:var44} (チェック済) may have invalid values (Check layout sheet)"
}


count if var48==.
if r(N)==_N {
    display as error "Only missing value: {bf:var48} (離職期間)"
}
capture assert inlist(var48, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:var48} (離職期間) may have invalid values (Check layout sheet)"
}


count if var49==.
if r(N)==_N {
    display as error "Only missing value: {bf:var49} (前職の従業員数)"
}
capture assert inlist(var49, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:var49} (前職の従業員数) may have invalid values (Check layout sheet)"
}


count if var50==.
if r(N)==_N {
    display as error "Only missing value: {bf:var50} (チェック済)"
}
capture assert inlist(var50, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:var50} (チェック済) may have invalid values (Check layout sheet)"
}


count if var53==.
if r(N)==_N {
    display as error "Only missing value: {bf:var53} (チェック済)"
}
capture assert inlist(var53, 10, 11, 12, 13, 14, 15, 16, 17, .)
if _rc!=0 {
    display as error "WARNING: {bf:var53} (チェック済) may have invalid values (Check layout sheet)"
}


count if var56==.
if r(N)==_N {
    display as error "Only missing value: {bf:var56} (チェック済)"
}
capture assert inlist(var56, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:var56} (チェック済) may have invalid values (Check layout sheet)"
}


count if var60==.
if r(N)==_N {
    display as error "Only missing value: {bf:var60} (製造業分類)"
}


