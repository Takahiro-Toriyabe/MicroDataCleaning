/*----------------------------------------------------------------------
    <README>
    This do-file is generated from the python program provided by [URL].
        _const.do:    Import fixed-length data
        _var.do:      Put variable labels
        _val.do:      Put value labels
        _validate.do: Check if the data seems correctly imported
        _rename.do: Rename variable names to append several data

    WARNING:
        1. The generated do-files do not necessarily correct.
           If you find something wrong regarding the program or
           the resulting do-file(s), please send email to [Email Address].

        2. All variables are assumed to be numeric, if there is a variable
           with non-missing string value, modify _const.do and _val.do

        3. _validate.do checks if each variable has the values that it is
           supposed to have. (Categorical variables only)

        4. _rename.do is generated by finding a variable with a similar
           variable description and, if any, a similar variable name from
           the base data. So it is quite likely that some variables are
           renamed incorrectly. Please check and modify _rename.do.

        5. In addition, there is no file to make variable values consistent
           across different data.


    Source: 平成16～29年_賃金福祉基本統計調査_符号表(個人票).xlsx
    Date: 2019/02/22 13:15:08
----------------------------------------------------------------------*/


capture assert inlist(var13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:var13} (マスター事業所規模) may have invalid values (Check layout sheet)"
}
count if var13==.
if r(N)==_N {
    display as error "Only missing value: {bf:var13} (マスター事業所規模)"
}

capture assert inlist(var14, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:var14} (マスター臨時雇用者規模) may have invalid values (Check layout sheet)"
}
count if var14==.
if r(N)==_N {
    display as error "Only missing value: {bf:var14} (マスター臨時雇用者規模)"
}

capture assert inlist(var15, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:var15} (マスター企業規模) may have invalid values (Check layout sheet)"
}
count if var15==.
if r(N)==_N {
    display as error "Only missing value: {bf:var15} (マスター企業規模)"
}

capture assert inlist(var18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:var18} (調査票事業所規模) may have invalid values (Check layout sheet)"
}
count if var18==.
if r(N)==_N {
    display as error "Only missing value: {bf:var18} (調査票事業所規模)"
}

capture assert inlist(var19, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:var19} (調査票臨時雇用者規模) may have invalid values (Check layout sheet)"
}
count if var19==.
if r(N)==_N {
    display as error "Only missing value: {bf:var19} (調査票臨時雇用者規模)"
}

capture assert inlist(var20, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:var20} (調査票企業規模) may have invalid values (Check layout sheet)"
}
count if var20==.
if r(N)==_N {
    display as error "Only missing value: {bf:var20} (調査票企業規模)"
}

capture assert inlist(var25, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:var25} (本支区分) may have invalid values (Check layout sheet)"
}
count if var25==.
if r(N)==_N {
    display as error "Only missing value: {bf:var25} (本支区分)"
}

capture assert inlist(var26, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:var26} (民公区分) may have invalid values (Check layout sheet)"
}
count if var26==.
if r(N)==_N {
    display as error "Only missing value: {bf:var26} (民公区分)"
}

capture assert inlist(var27, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:var27} (種類) may have invalid values (Check layout sheet)"
}
count if var27==.
if r(N)==_N {
    display as error "Only missing value: {bf:var27} (種類)"
}

capture assert inlist(var38, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:var38} (性別) may have invalid values (Check layout sheet)"
}
count if var38==.
if r(N)==_N {
    display as error "Only missing value: {bf:var38} (性別)"
}

capture assert inlist(var39, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:var39} (雇用形態) may have invalid values (Check layout sheet)"
}
count if var39==.
if r(N)==_N {
    display as error "Only missing value: {bf:var39} (雇用形態)"
}

capture assert inlist(var40, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:var40} (就業形態) may have invalid values (Check layout sheet)"
}
count if var40==.
if r(N)==_N {
    display as error "Only missing value: {bf:var40} (就業形態)"
}

capture assert inlist(var41, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:var41} (最終学歴) may have invalid values (Check layout sheet)"
}
count if var41==.
if r(N)==_N {
    display as error "Only missing value: {bf:var41} (最終学歴)"
}

capture assert inlist(var44, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:var44} (労働者の種類) may have invalid values (Check layout sheet)"
}
count if var44==.
if r(N)==_N {
    display as error "Only missing value: {bf:var44} (労働者の種類)"
}

capture assert inlist(var45, 101, 102, 103, 104, 105, .)
if _rc!=0 {
    display as error "WARNING: {bf:var45} (役職・職種) may have invalid values (Check layout sheet)"
}
count if var45==.
if r(N)==_N {
    display as error "Only missing value: {bf:var45} (役職・職種)"
}

capture assert inlist(var46, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:var46} (経験年数) may have invalid values (Check layout sheet)"
}
count if var46==.
if r(N)==_N {
    display as error "Only missing value: {bf:var46} (経験年数)"
}

