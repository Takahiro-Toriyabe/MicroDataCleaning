/*----------------------------------------------------------------------
    <README>
    This do-file is generated from the python program provided by [URL].
        _const.do:    Import fixed-length data
        _var.do:      Put variable labels
        _val.do:      Put value labels
        _validate.do: Check if the data seems correctly imported
        _rename.do: Rename variable names to append several data

    WARNING:
        1. The generated do-files do not necessarily correct.
           If you find something wrong regarding the program or
           the resulting do-file(s), please send email to [Email Address].

        2. All variables are assumed to be numeric, if there is a variable
           with non-missing string value, modify _const.do and _val.do

        3. _validate.do checks if each variable has the values that it is
           supposed to have. (Categorical variables only)

        4. _rename.do is generated by finding a variable with a similar
           variable description and, if any, a similar variable name from
           the base data. So it is quite likely that some variables are
           renamed incorrectly. Please check and modify _rename.do.

        5. In addition, there is no file to make variable values consistent
           across different data.


    Source: 平成16～29年_賃金福祉基本統計調査_符号表(個人票).xlsx
    Date: 2019/02/25 04:50:11
----------------------------------------------------------------------*/


capture assert inlist(var1, 2008, .)
if _rc!=0 {
    display as error "WARNING: {bf:var1} (調査年) may have invalid values (Check layout sheet)"
}
count if var1==.
if r(N)==_N {
    display as error "Only missing value: {bf:var1} (調査年)"
}

capture assert inlist(var12, 0, 2, 4, 6, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:var12} (事業所規模) may have invalid values (Check layout sheet)"
}
count if var12==.
if r(N)==_N {
    display as error "Only missing value: {bf:var12} (事業所規模)"
}

capture assert inlist(var13, 1, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:var13} (臨時雇用者規模番号) may have invalid values (Check layout sheet)"
}
count if var13==.
if r(N)==_N {
    display as error "Only missing value: {bf:var13} (臨時雇用者規模番号)"
}

capture assert inlist(var14, 1, 3, 5, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:var14} (企業規模) may have invalid values (Check layout sheet)"
}
count if var14==.
if r(N)==_N {
    display as error "Only missing value: {bf:var14} (企業規模)"
}

capture assert inlist(var17, 0, 2, 4, 6, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:var17} (事業所規模) may have invalid values (Check layout sheet)"
}
count if var17==.
if r(N)==_N {
    display as error "Only missing value: {bf:var17} (事業所規模)"
}

capture assert inlist(var18, 1, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:var18} (臨時雇用者規模番号) may have invalid values (Check layout sheet)"
}
count if var18==.
if r(N)==_N {
    display as error "Only missing value: {bf:var18} (臨時雇用者規模番号)"
}

capture assert inlist(var19, 1, 3, 5, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:var19} (企業規模) may have invalid values (Check layout sheet)"
}
count if var19==.
if r(N)==_N {
    display as error "Only missing value: {bf:var19} (企業規模)"
}

capture assert inlist(var24, 1, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:var24} (本・支区分) may have invalid values (Check layout sheet)"
}
count if var24==.
if r(N)==_N {
    display as error "Only missing value: {bf:var24} (本・支区分)"
}

capture assert inlist(var25, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:var25} (民・公区分) may have invalid values (Check layout sheet)"
}
count if var25==.
if r(N)==_N {
    display as error "Only missing value: {bf:var25} (民・公区分)"
}

capture assert inlist(var26, 1, 3, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:var26} (種類) may have invalid values (Check layout sheet)"
}
count if var26==.
if r(N)==_N {
    display as error "Only missing value: {bf:var26} (種類)"
}

capture assert inlist(var35, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:var35} (小) may have invalid values (Check layout sheet)"
}
count if var35==.
if r(N)==_N {
    display as error "Only missing value: {bf:var35} (小)"
}

capture assert inlist(var37, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:var37} (性別) may have invalid values (Check layout sheet)"
}
count if var37==.
if r(N)==_N {
    display as error "Only missing value: {bf:var37} (性別)"
}

capture assert inlist(var38, 1, 3, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:var38} (雇用形態) may have invalid values (Check layout sheet)"
}
count if var38==.
if r(N)==_N {
    display as error "Only missing value: {bf:var38} (雇用形態)"
}

capture assert inlist(var39, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:var39} (就業形態) may have invalid values (Check layout sheet)"
}
count if var39==.
if r(N)==_N {
    display as error "Only missing value: {bf:var39} (就業形態)"
}

capture assert inlist(var40, 1, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:var40} (最終学歴) may have invalid values (Check layout sheet)"
}
count if var40==.
if r(N)==_N {
    display as error "Only missing value: {bf:var40} (最終学歴)"
}

capture assert inlist(var43, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:var43} (労働者の種類) may have invalid values (Check layout sheet)"
}
count if var43==.
if r(N)==_N {
    display as error "Only missing value: {bf:var43} (労働者の種類)"
}

capture assert inlist(var45, 1, 3, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:var45} (経験年数) may have invalid values (Check layout sheet)"
}
count if var45==.
if r(N)==_N {
    display as error "Only missing value: {bf:var45} (経験年数)"
}

